// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  //change the url variable to perform migrations on testing db
  url      = env("TEST_DATABASE_URL")
}

model User {
  id       Int                 @id @default(autoincrement())
  username String              @unique
  bio      String?
  password String
  image    String?
  chats    ChatPartecipation[]
  messages Message[]
}

model Chat {
  id           Int                 @id @default(autoincrement())
  name         String?             @default("")
  partecipants ChatPartecipation[]
  messages     Message[]
}

model ChatPartecipation {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
  chat   Chat @relation(fields: [chatId], references: [id])
  chatId Int

  @@unique([userId, chatId])
}

model Message {
  id        Int      @id @default(autoincrement())
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  chatId    Int
  chat      Chat     @relation(fields: [chatId], references: [id])
  value     String
  isText    Boolean  @default(true)
  createdAt DateTime @default(now())
}
